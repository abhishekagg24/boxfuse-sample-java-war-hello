steps:          
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: "rsa-${{ parameters.environment }}-sp"
        KeyVaultName: "rsa-${{ parameters.environment }}-kv"
        SecretsFilter: "tf-sp-id,tf-sp-secret,tf-tenant-id,tf-subscription-id,tf-backend-sa-access-key,aks-sp-id,aks-sp-secret"
      displayName: "Get key vault secrets as pipeline variables"
            
    - task: AzureCLI@2
      displayName: 'Import tfstate file from storage'
      inputs:
        azureSubscription: "rsa-${{ parameters.environment }}-sp"
        workingDirectory: "$(System.DefaultWorkingDirectory)/Terraform"
        scriptType: "bash"
        scriptLocation: "inlineScript"
        inlineScript: 'az storage blob download --account-name $(tfBackendStorageAccountName) --account-key $(tf-backend-sa-access-key) --container-name $(tfBackendStorageContainerName) --name $(tfBackendFileName) --file ./$(tfBackendFileName)'
          
    - task: Bash@3
      displayName: 'Produce terraform output'
      inputs:
        targetType: 'inline'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        script: |
          terraform output -state=$(tfBackendFileName) -json > outputs.json
          rm -f $(tfBackendFileName)
            
    - powershell: |
        $terraformOutput = Get-Content "$(System.DefaultWorkingDirectory)/Terraform/outputs.json" | ConvertFrom-Json
        $terraformOutput | Get-Member -MemberType NoteProperty | % { $o = $terraformOutput.($_.Name); Write-Host "##vso[task.setvariable variable=$($_.Name);isoutput=true;issecret=$($o.sensitive)]$($o.value)" }
      name: terraformOutput
      displayName: Read terraform outputs  